import React, { useCallback, useEffect, useMemo, useState } from "react";
import newbie1 from "../pages/images/newbie1.png";
import newbie2 from "../pages/images/newbie2.png";
import newbie3 from "../pages/images/newbie3.png";
import sellers1 from "../pages/images/sellers1.png";
import sellers2 from "../pages/images/sellers2.png";
import sellers3 from "../pages/images/sellers3.png";
import bussines1 from "../pages/images/bussines1.png";
import bussines2 from "../pages/images/bussines2.png";
import bussines3 from "../pages/images/bussines3.png";
import manager1 from "../pages/images/manager1.png";
import manager2 from "../pages/images/manager2.png";
import manager3 from "../pages/images/manager3.png";
import Steps from "../pages/images/Steps";

const dataImages = {
  newbie: [newbie1, newbie2, newbie3],
  currentSellers: [sellers1, sellers2, sellers3],
  business: [bussines1, bussines2, bussines3],
  manager: [manager1, manager2, manager3],
};

const whyUs = {
  newbie: {
    title: "–ù–æ–≤–∏—á–∫–∏",
    functions: [
      {
        emoji: "üîç",
        text: "–ù–∞–π—Ç–∏ –ø—Ä–∏–±—ã–ª—å–Ω—É—é –Ω–∏—à—É –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–ø—Ä–æ—Å",
      },
      { emoji: "üìä", text: "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ª–∏–¥–µ—Ä–æ–≤ —Ä—ã–Ω–∫–∞" },
      {
        emoji: "üì¶",
        text: "–í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–∏–∑–Ω–µ—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–æ–¥–∞–≤–∞—Ç—å—Å—è",
      },
    ],
  },
  currentSellers: {
    title: "–î–µ–π—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–¥–∞–≤—Ü—ã",
    functions: [
      { emoji: "üí∏", text: "–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏" },
      {
        emoji: "üí∞",
        text: "–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–Ω–¥—ã –∏ —Ä–∞—Å—à–∏—Ä—è—Ç—å —Ç–æ–≤–∞—Ä–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É –ø—Ä–∏–±—ã–ª—å–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏",
      },
      { emoji: "üîù", text: "–í—ã–≤–µ—Å—Ç–∏ —Ç–æ–≤–∞—Ä—ã –≤ –¢–û–ü –∏ —É–ª—É—á—à–∏—Ç—å SEO-–≤—ã–¥–∞—á—É" },
    ],
  },
  business: {
    title: "–ö—Ä—É–ø–Ω—ã–π –±–∏–∑–Ω–µ—Å",
    functions: [
      {
        emoji: "üë•",
        text: "–î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –∏ —É–¥–æ–±–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å",
      },
      {
        emoji: "üìç",
        text: "–í–∏–¥–µ—Ç—å –≤—Å–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –ø–æ –≤—Å–µ–º –º–∞–≥–∞–∑–∏–Ω–∞–º –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ",
      },
      {
        emoji: "üí°",
        text: "–ü—Ä–∏–Ω–∏–º–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏ –≤–µ—Ä–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –±–∏–∑–Ω–µ—Å–∞",
      },
    ],
  },
  manager: {
    title: `–ú–µ–Ω–µ–¥–∂–µ—Ä—ã –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –∏ –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞`,
    functions: [
      { emoji: "üìà", text: "–î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –æ–¥–∏–Ω —Å–µ—Ä–≤–∏—Å" },
      {
        emoji: "üìù",
        text: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å –∏ —Ä—É—Ç–∏–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏",
      },
      {
        emoji: "üîë",
        text: "–£–¥–æ–±–Ω–∞—è —Ñ–æ—Ä–º–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –∑–∞ –∫–ª—é—á–µ–≤—ã–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏",
      },
    ],
  },
};

const BtnHomePage = () => {
  const [activeButton, setActiveButton] = useState("newbie");

  const handleClick = useCallback((buttonName) => {
    setActiveButton(buttonName);
  }, []);

  useEffect(() => {
    const loadImage = (src) => {
      return new Promise((resolve) => {
        const img = new Image();
        img.src = src;
        img.onload = resolve;
      });
    };

    const loadImages = async () => {
      const images = Object.values(dataImages).flat();
      await Promise.all(images.map(loadImage));
    };

    loadImages();
  }, []);

  const renderedImages = useMemo(() => {
    return dataImages[activeButton].map((src, index) => (
      <div
        key={index}
        style={{ marginRight: "5px", position: "relative", maxWidth: "460px" }}
      >
        <img
          style={{ borderRadius: "18px" }}
          src={src}
          alt={"Block Main Page"}
          className='imgBox'
        />
      </div>
    ));
  }, [activeButton]);

  const sections = Object.values(whyUs);
  const renderedTitles = () => {
    return (
      <div style={{ display: "flex", flexDirection: "column" }}>
        {sections.map((section, index) => (
          <div key={index} className='card'>
            <div className='cardHeader'>
              <Steps.CircleWhite />
              <p className='cardTitle'>{section.title}</p>
            </div>

            <div className='cardBody'>
              {section.functions.map((func, funcIndex) => (
                <div className='cardContent' key={funcIndex}>
                  <div className='cardImage'>
                    <span>{func.emoji}</span>
                  </div>
                  <div className='cardText'>{func.text}</div>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>
    );
  };

  return (
    <>
      <div className='widhead-container-title'>
        –ö–æ–º—É –∏ –¥–ª—è —á–µ–≥–æ –Ω—É–∂–µ–Ω –Ω–∞—à —Å–µ—Ä–≤–∏—Å
      </div>
      <div className='widhead-container-header'>
        <button
          onClick={() => handleClick("newbie")}
          className={activeButton === "newbie" ? "prime-btn" : "secondary-btn"}
          id='btnDop'
        >
          {activeButton === "newbie" ? <Steps.Circle /> : <span></span>}
          –ù–æ–≤–∏—á–∫–∏
        </button>
        <button
          onClick={() => handleClick("currentSellers")}
          className={
            activeButton === "currentSellers" ? "prime-btn" : "secondary-btn"
          }
          id='btnDop'
        >
          {activeButton === "currentSellers" ? <Steps.Circle /> : <span></span>}
          –î–µ–π—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–¥–∞–≤—Ü—ã
        </button>
        <button
          onClick={() => handleClick("business")}
          className={
            activeButton === "business" ? "prime-btn" : "secondary-btn"
          }
          id='btnDop'
        >
          {activeButton === "business" ? <Steps.Circle /> : <span></span>}
          –ö—Ä—É–ø–Ω—ã–π –±–∏–∑–Ω–µ—Å
        </button>
        <button
          onClick={() => handleClick("manager")}
          className={activeButton === "manager" ? "prime-btn" : "secondary-btn"}
          id='btnDop'
        >
          {activeButton === "manager" ? <Steps.Circle /> : <span></span>}
          –ú–µ–Ω–µ–¥–∂–µ—Ä—ã –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –∏ –∞–≥–µ–Ω—Ç—Å—Ç–≤–∞
        </button>
      </div>
      <div className='widhead-container widhead-container-main'>
        {renderedImages}
      </div>
      <div className='widhead-container-mini'>{renderedTitles()}</div>
    </>
  );
};

export default BtnHomePage;
